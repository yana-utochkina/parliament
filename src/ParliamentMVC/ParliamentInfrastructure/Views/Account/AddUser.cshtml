@model ParliamentInfrastructure.ViewModels.RegisterUsersViewModel

@{
    ViewData["Title"] = "Add user";
}

<div class="d-flex justify-content-center">
    <h2>Додати користувачів</h2>
</div>
<div class="d-flex justify-content-center">
    <div class="card col-md-6">
        <div class="card-content">
            <div class="card-body">
                <form class="form form-horizontal" method="post" asp-controller="Account" asp-action="AddUser">
                    <div class="form-body" id="userContainer">
                        @for (int i = 0; i < Model.Users.Count; i++)
                        {
                            <div class="user-form row">
                                <div class="col-md-4 text-end">
                                    <label asp-for="Users[@i].Email"></label>
                                    <small class="text-danger">*</small>
                                </div>
                                <div class="col-md-8 form-group">
                                    <input asp-for="Users[@i].Email" class="form-control @(ViewData.ModelState[$"Users[{i}].Email"]?.Errors.Count > 0 ? "is-invalid" : "")" placeholder="example@gmail.com">
                                    <div class="invalid-feedback">
                                        <i class="bx bx-radio-circle"></i>
                                        <span asp-validation-for="Users[@i].Email"></span>
                                    </div>
                                </div>
                                <div class="col-md-4 text-end">
                                    <label asp-for="Users[@i].FullName"></label>
                                    <small class="text-danger">*</small>
                                </div>
                                <div class="col-md-8 form-group">
                                    <input asp-for="Users[@i].FullName" class="form-control @(ViewData.ModelState[$"Users[{i}].FullName"]?.Errors.Count > 0 ? "is-invalid" : "")" placeholder="Введіть прізвище ім'я	">
                                    <div class="invalid-feedback">
                                        <i class="bx bx-radio-circle"></i>
                                        <span asp-validation-for="Users[@i].FullName"></span>
                                    </div>
                                </div>
                                <div class="col-md-4 text-end">
                                    <label asp-for="Users[@i].University"></label>
                                    <small class="text-danger">*</small>
                                </div>
                                <div class="col-md-8 form-group">
                                    <input asp-for="Users[@i].University" class="form-control @(ViewData.ModelState[$"Users[{i}].University"]?.Errors.Count > 0 ? "is-invalid" : "")" placeholder="Введіть назву університету">
                                    <div class="invalid-feedback">
                                        <i class="bx bx-radio-circle"></i>
                                        <span asp-validation-for="Users[@i].University"></span>
                                    </div>
                                </div>
                                <div class="col-md-4 text-end">
                                    <label asp-for="Users[@i].Faculty"></label>
                                    <small class="text-danger">*</small>
                                </div>
                                <div class="col-md-8 form-group">
                                    <input asp-for="Users[@i].Faculty" class="form-control @(ViewData.ModelState[$"Users[{i}].Faculty"]?.Errors.Count > 0 ? "is-invalid" : "")" placeholder="Введіть назву факультету">
                                    <div class="invalid-feedback">
                                        <i class="bx bx-radio-circle"></i>
                                        <span asp-validation-for="Users[@i].Faculty"></span>
                                    </div>
                                </div>
                                <input type="hidden" name="Users[@i].Password" value="Qwerty_1" />
                                <input type="hidden" name="Users[@i].PasswordConfirm" value="Qwerty_1" />
                                <hr />
                            </div>
                        }
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary" id="addUserButton">Додати ще користувача</button>
                        <input class="btn btn-primary" type="submit" value="Сформувати QR-коди" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById("addUserButton").addEventListener("click", function () {
        const container = document.getElementById("userContainer");
        const userForms = container.querySelectorAll(".user-form");
        const lastIndex = userForms.length; // Новий індекс для наступного користувача

        const newForm = userForms[0].cloneNode(true); // Копіюємо перший шаблон
        const inputs = newForm.querySelectorAll("input");

        inputs.forEach(input => {
            // Очистити значення
            input.value = "";

            // Оновити name та id
            const name = input.getAttribute("name");
            if (name) {
                const newName = name.replace(/\[\d+\]/, `[${lastIndex}]`);
                input.setAttribute("name", newName);
            }

            const id = input.getAttribute("id");
            if (id) {
                const newId = id.replace(/\_\d+__/, `_${lastIndex}__`);
                input.setAttribute("id", newId);
            }
        });

        // Оновити label "for"
        const labels = newForm.querySelectorAll("label");
        labels.forEach(label => {
            const labelFor = label.getAttribute("for");
            if (labelFor) {
                const newFor = labelFor.replace(/\_\d+__/, `_${lastIndex}__`);
                label.setAttribute("for", newFor);
            }
        });

        container.appendChild(newForm);
    });
</script>

